// Code generated by mog. DO NOT EDIT.

package appendentries

import (
	"github.com/hashicorp/raft"
	"github.com/hashicorp/raft/proto/common"
)

func AppendEntriesRequestToStruct(s *AppendEntriesRequest, t *raft.AppendEntriesRequest) {
	if s == nil {
		return
	}
	t.RPCHeader = common.RPCHeaderFromProto(s.RPCHeader)
	t.Term = s.Term
	t.Leader = s.Leader
	t.PrevLogEntry = s.PrevLogEntry
	t.PrevLogTerm = s.PrevLogTerm
	t.Entries = common.LogFromProto(s.Entries)
	t.LeaderCommitIndex = s.LeaderCommitIndex
}
func AppendEntriesRequestFromStruct(t *raft.AppendEntriesRequest, s *AppendEntriesRequest) {
	if s == nil {
		return
	}
	s.RPCHeader = common.RPCHeaderToProto(t.RPCHeader)
	s.Term = t.Term
	s.Leader = t.Leader
	s.PrevLogEntry = t.PrevLogEntry
	s.PrevLogTerm = t.PrevLogTerm
	s.Entries = common.LogToProto(t.Entries)
	s.LeaderCommitIndex = t.LeaderCommitIndex
}
func AppendEntriesResponseToStruct(s *AppendEntriesResponse, t *raft.AppendEntriesResponse) {
	if s == nil {
		return
	}
	t.RPCHeader = common.RPCHeaderFromProto(s.RPCHeader)
	t.Term = s.Term
	t.LastLog = s.LastLog
	t.Success = s.Success
	t.NoRetryBackoff = s.NoRetryBackoff
}
func AppendEntriesResponseFromStruct(t *raft.AppendEntriesResponse, s *AppendEntriesResponse) {
	if s == nil {
		return
	}
	s.RPCHeader = common.RPCHeaderToProto(t.RPCHeader)
	s.Term = t.Term
	s.LastLog = t.LastLog
	s.Success = t.Success
	s.NoRetryBackoff = t.NoRetryBackoff
}
